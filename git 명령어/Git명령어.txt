eclipse 에서 git push 및 설치하기
https://yyman.tistory.com/1392


0. Git-Bash CMD 명령어
pwd // 현재 경로 확인
cd ~ // Home 경로로 이동
cd Desktop // Desktop으로 이동
mkdir 폴더명 // 폴더 만들기
rm -rf 폴더명 // 폴더 지우기
ls // 해당 경로의 파일 보기
ls -A // 숨김파일까지 다 보기 => git init이 잘 됐는지 확인한다.
touch test // test라는 빈파일 생성
git init // 해당 폴더 git 초기화
; // 명령어들을 연속적으로 실행 가능 ex) cd ~; mkdir 새폴더; cd 새폴더; git init; ls -A
1. Git 사용자 정보, 원격저장소 등록
git config -l // 사용자 정보 보기
git config --global user.email "이메일" // Github 사용자 계정 등록
git config --global user.name "이름" // Github 사용자 이름 등록
git remote add origin 저장소URL // 원격저장소 등록 (복붙 단축키는 Shift + Insert)
git remote -v // 원격저장소 등록 확인
2-1. add, commit, push
git add . // 현재 경로 전체 파일 add
git commit -m "메세지" // commit
git commit -sm "메세지" // 서명포함 commit
git push origin master // (master 브랜치에) push
git push origin master --force 혹은 -f // 강제로 push
// Github에 있는 commit을 수정할 방법은 Local에서 수정 후 -f옵션으로 push 하는 방법뿐이다.
2-2. add, commit 진행상황 보기
git diff // 파일 변경사항 확인
git status // add 상태 보기
git shortlog // commit 기록 간략보기
git log // commit 기록 보기
git show // 최신 commit, 변경사항 보기
// log, show가 길어질 경우, (END)가 나왔을때 나가는 법 : q
3. Github 다운로드
git clone 저장소URL // 다운로드
git pull 저장소URL // 동기화
[Advanced]
1. add 취소
git reset // add 취소
2-1. 최상단 commit 메세지 수정
git commit --amend // 가장 위에 있는 commit 메세지 수정
// vi 에디터가 나오면 i나 a를 눌러 수정한다.
// 수정이 끝나면 ESC를 누른다.
// :wq 를 입력하고 Enter를 눌러 나온다.
//
// 최상위 commit 메세지를 수정하고 push를 하면 충돌이 일어난다.
// => 로컬PC의 수정된 commit 메세지와 Github의 기존 commit 메세지가 다르기 때문이다.
// => "git push origin master --force 혹은 -f"를 입력해 로컬PC를 기준으로 맞춰준다.
2-2. 중간에 낀 commit 메세지 수정하기

git rebase -i --root // vi 에디터 소환, pick을 edit으로 바꾸기
// vi 에디터가 나오면 i나 a를 눌러 수정한다.
// 수정이 끝나면 ESC를 누른다.
// :wq 를 입력하고 Enter를 눌러 나온다.
3. 최상단 commit 삭제
git reset HEAD~1 // 최상단 commit 삭제
4. Pull-request
다른 프로젝트에 내가 만든 commit을 제출한다.
상대방의 프로젝트를 fork(복사)해서 내 계정에서 관리되는 프로젝트로 새롭게 만들어 두고
기존 프로젝트를 토대로 새로운 commit 내용들을 pull-request 제출 할 수 있다.
5. branch
git checkout -b develop // pull-request 작업할 브랜치(develop) 따로 만들기
// 브랜치 : 같은 폴더에 또다른 세상 열기
git branch // branch 확인
git checkout develop // develop 브랜치로 이동
git merge test // develop 브랜치에서 test 브랜치 합치기
6. Rebase
git remote add upstream 저장소URL // rebase할 저장소URL 추가
git fetch upstream dev // upstream의 dev 브랜치 commit들을 최신으로 갱신합니다.
git rebase upstream/dev // 갱신한 commit들을 개인PC에 적용합니다. (re-base 합니다.)

https://blog.naver.com/dmdgi37/222060122716 
Git사용법
